@using Microsoft.AspNetCore.Http
@using System.Globalization
@using Tour0Suisse.Model
@model Tour0Suisse.Model.Utilisateur

@{ ViewData["Title"] = " Editer pseudo en jeu";
                ViewData["Message"] = (Model == null) ? "" : Model.Pseudo ?? "";
    System.Diagnostics.Debug.Assert(Model != null, nameof(Model) + " != null");
    var LoggedUser = int.TryParse(Context.Session.GetString("UserId"), out int Id) && Id == Model.IdUser; }
<h2>@ViewData["Title"]</h2>
<h3>@ViewData["Message"]</h3>

<div class="row">
    <div class="col-md-4">
        <form asp-controller="User" asp-action="AddGamePseudo" method="post" class="form-horizontal">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="@Model.IdUser" class="control-label" type="hidden"/>


            @for (int i = 0; i<Model.PseudoIgs.Count; i++)  // ne pas changé en foreach ça va le bind ne ce fait plus.
            {
                <div class="form-group">
                    <input asp-for="@Model.PseudoIgs[i].IdGame" class="control-label" type="hidden" />
                    <input asp-for="@Model.PseudoIgs[i].Game" class="control-label" type="hidden" />
                    <input asp-for="@Model.PseudoIgs[i].IdUser" class="control-label" type="hidden" />
                    <label asp-for="@Model.PseudoIgs[i].IgPseudo" class="control-label">Pseudo pour @Model.PseudoIgs[i].Game </label>
                    <input asp-for="@Model.PseudoIgs[i].IgPseudo" class="form-control" />
                    <span asp-validation-for="@Model.PseudoIgs[i].IgPseudo" class="text-danger"></span>
                </div>
            }


            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Details" asp-route-id="@Model.IdUser">Retourner au profil</a>
</div>