@using Tour0Suisse.Model
@using Microsoft.AspNetCore.Http
@model Tour0Suisse.Model.Match

@{
    ViewData["Title"] = "Match";
    bool Adversaire = ((int.TryParse(Context.Session.GetString("UserId"), out int UId)) && (Model.IdPlayer1 == UId || Model.IdPlayer2 == UId));
    }

    <h4>Match</h4>
    <hr />
    @if (ViewBag.error != null)
    {
        <div class="warning">
            <span class="text-danger">@( (string)@ViewBag.error )</span>
        </div>
    }
<div class="div-row">
    <div class="text-center div-left">
        @foreach (var deck in (IEnumerable<ViewDeck>)ViewData["DecksP1"])
        {
            <h4>@deck.IdDeck</h4>
            <textarea readonly class="text-info">@(deck.DeckList)</textarea>
        }
    </div>
    <div class="text-center div-center">
        <form asp-action="UpdateMatch" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdTournament" />
            <input type="hidden" asp-for="RoundNumber" />
            <input type="hidden" asp-for="IdPlayer1" />
            <input type="hidden" asp-for="IdPlayer2" />

            @if (Model.Parties.Any())
            {
                <table class="table-responsive col-lg-12">
                    <thead>
                    <tr>
                        <th class="text-center">
                            @Html.DisplayNameFor(m => m.Parties[0].Deck1)
                        </th>
                        <th class="text-center">
                            @Html.DisplayNameFor(m => m.Parties[0].ResultPart)
                        </th>
                        <th class="text-center"> 
                            @Html.DisplayNameFor(m => m.Parties[0].Deck2)
                        </th>
                    </tr>
                    </thead>
                    <tbody>
                    @for (int i = 0; i < Model.Parties.Count; i++) //do not change for foreach, it will not work any more
                    {
                        <tr>
                        <input asp-for="@Model.Parties[i].PartNumber" hidden/>
                            
                        <td class="text-center">
                            <select asp-for="@Model.Parties[i].IdDeckPlayer1" asp-items="@(new SelectList(((IEnumerable<ViewDeck>) ViewData["DecksP1"]).Append(new ViewDeck()), "IdDeck", "IdDeck", @Model.Parties[i].IdDeckPlayer1))" disabled="@(!Adversaire || 0 <= (@Model.Parties[i].sResultPart) && (@Model.Parties[i].sResultPart) <= 2)" class="form-control text-center"></select>
                            <span asp-validation-for="@Model.Parties[i].Deck1" class="text-danger"></span>
                        </td>
                            <td class="text-center">
                                <select asp-for="@Model.Parties[i].sResultPart" asp-items="@(new SelectList(new SortedList<string, sbyte?> {{"Qui est le gagnant", -1}, {"Draw", 0}, {"Joueur 2", 2}, {"Joueur 1", 1}}, "Value", "Key", @Model.Parties[i].sResultPart))" disabled="@(!Adversaire || 0 <= (@Model.Parties[i].sResultPart) && (@Model.Parties[i].sResultPart) <= 2)" class="form-control text-center"></select>
                            </td>
                            <td class="text-center">
                                <select asp-for="@Model.Parties[i].IdDeckPlayer2" asp-items="@(new SelectList(((IEnumerable<ViewDeck>) ViewData["DecksP2"]).Append(new ViewDeck()), "IdDeck", "IdDeck", @Model.Parties[i].IdDeckPlayer2))" disabled="@(!Adversaire || 0 <= (@Model.Parties[i].sResultPart) && (@Model.Parties[i].sResultPart) <= 2)" class="form-control text-center"></select>
                                <span asp-validation-for="@Model.Parties[i].Deck2" class="text-danger"></span>
                            </td>
                            
                        </tr>
                    }
                    </tbody>
                </table>
            }
            @if (Adversaire)
            {

                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            }
        </form>
    </div>
    <div class="text-center div-right">
        @foreach (var deck in (IEnumerable<ViewDeck>)ViewData["DecksP2"])
        {
            <h4>@deck.IdDeck</h4>
            <textarea readonly class="text-info">@(deck.DeckList)</textarea>
        }
    </div>
</div>

    <div>
        <a asp-action="Details" asp-route-id="@Model.IdTournament">Back to Tournoi</a>
    </div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }