@using Tour0Suisse.Model
@model Tour0Suisse.Model.Match

@{
    ViewData["Title"] = "Edit";
}


<script>
    function ShowDeck(selectObject) {

        //var BaseId = "#" + selectObject.id;
        //var value = selectObject.value;

        //var i;
        //for (i = 0; i < selectObject.length; i++) {
        //    $(BaseId + "_" + $(BaseId)[0].options[i].value).collapse("hide");
        //    console.log(BaseId);
        //}
        //$(BaseId + "_" + value).collapse("show");

    }
</script>

<h2>Edit</h2>

<h4>Match</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateMatch" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdTournament" />
            <input type="hidden" asp-for="RoundNumber" />
            <input type="hidden" asp-for="IdPlayer1" />
            <input type="hidden" asp-for="IdPlayer2" />

            @if (Model.Parties.Any())
            {
                <div class="container border">
                    @for (int i = 0; i < Model.Parties.Count; i++)
                    {
                        <input asp-for="@Model.Parties[i].PartNumber" hidden />
                        <div class="form-group row">
                            <div class="col-sm">
                                <label asp-for="@Model.Parties[i].Deck1" class="control-label"></label>
                                <select asp-for="@Model.Parties[i].IdDeckPlayer1" asp-items="@(new SelectList((IEnumerable<ViewDeck>)ViewData["DecksP1"], "IdDeck", "IdDeck", @Model.Parties[i].IdDeckPlayer1))" onchange="ShowDeck(this)" id="@("SelectP1_partie"+@Model.Parties[i].PartNumber)"></select>
                                @foreach (var deck in (IEnumerable<ViewDeck>)ViewData["DecksP1"])
                                {
                                    <textarea readonly class="collapse" id="@("SelectP1_partie"+@Model.Parties[i].PartNumber+"_"+deck.IdDeck)">@(deck.DeckList)</textarea>
                                }
                                <span asp-validation-for="@Model.Parties[i].Deck1" class="text-danger"></span>
                            </div>
                            <div class="col-sm">
                                <label asp-for="@Model.Parties[i].ResultPart"></label>
                                <select asp-for="@Model.Parties[i].sResultPart" asp-items="@(new SelectList(new SortedList<string, sbyte?>{{"Qui est le gagnant", -1},{"Draw", 0}, {"Joueur 2", 2}, {"Joueur 1", 1} }, "Value", "Key", @Model.Parties[i].sResultPart))"></select>
                            </div>
                            <div class="col-sm">
                                <label asp-for="@Model.Parties[i].Deck2" class="control-label"></label>
                                <select asp-for="@Model.Parties[i].IdDeckPlayer2" asp-items="@(new SelectList((IEnumerable<ViewDeck>)ViewData["DecksP2"], "IdDeck", "IdDeck", @Model.Parties[i].IdDeckPlayer2))" onchange="ShowDeck(this)" id="@("SelectP2_partie"+@Model.Parties[i].PartNumber)"></select>
                                @foreach (var deck in (IEnumerable<ViewDeck>)ViewData["DecksP2"])
                                {
                                    <textarea readonly class="collapse" id="@("SelectP2_partie"+@Model.Parties[i].PartNumber+"_"+deck.IdDeck)">@(deck.DeckList)</textarea>
                                }
                                <span asp-validation-for="@Model.Parties[i].Deck2" class="text-danger"></span>
                            </div>
                        </div>
                    }
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Tournoi" asp-route-id="@Model.IdTournament">Back to Tournoi</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}